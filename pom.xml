<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vaadin</groupId>
    <artifactId>portlet-starter</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Project base for Vaadin Portlet application</name>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vaadin.version>14.0-SNAPSHOT</vaadin.version>
        <flow.version>2.1.portal-SNAPSHOT</flow.version>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <!-- Replace artifactId with vaadin-core to use only free components -->
            <artifactId>vaadin</artifactId>
            <exclusions>
                <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
                <exclusion>
                    <groupId>com.vaadin.webjar</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.insites</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymer</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymerelements</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.vaadin</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.webcomponents</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-server</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-client</artifactId>
            <version>${flow.version}</version>
        </dependency>
        <!-- Added to provide logging output as Flow uses -->
        <!-- the unbound SLF4J no-operation (NOP) logger implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.28</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-portlet</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>javax.portlet</groupId>
            <artifactId>portlet-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-testbench</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-maven-plugin</artifactId>
                <version>${flow.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>servlet</id>
            <dependencies>

                <dependency>
                    <groupId>javax.portlet</groupId>
                    <artifactId>portlet-api</artifactId>
                    <version>2.0</version>
                </dependency>
            </dependencies>
            <build>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                    </plugin>
                    <!-- Jetty plugin for easy testing without a server -->
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>9.4.19.v20190610</version>
                        <configuration>
                            <!-- If using IntelliJ IDEA with autocompilation, this
                            might cause lots of unnecessary compilations in the
                            background.-->
                            <scanIntervalSeconds>2</scanIntervalSeconds>
                            <!-- Use war output directory to get the webpack files -->
                            <webAppConfig>
                                <allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
                            </webAppConfig>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Production mode is activated using -Pproduction -->
            <id>production</id>

            <properties>
                <vaadin.productionMode>true</vaadin.productionMode>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                    <version>${flow.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <version>${flow.version}</version>
                        <artifactId>flow-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-frontend</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>demo</id>

            <properties>
                <pluto.version>3.1.0</pluto.version>
                <cargo.version>1.7.7</cargo.version>
                <tomcat.version>8.0.53</tomcat.version>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.apache.portals.pluto</groupId>
                    <artifactId>pluto-portal</artifactId>
                    <version>${pluto.version}</version>
                    <scope>provided</scope>
                    <type>war</type>
                </dependency>
                <dependency>
                    <groupId>javax.portlet</groupId>
                    <artifactId>portlet-api</artifactId>
                    <version>3.0.1</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                    <version>2.4</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.portals.pluto</groupId>
                    <artifactId>pluto-container</artifactId>
                    <version>${pluto.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.portals.pluto</groupId>
                    <artifactId>pluto-container-api</artifactId>
                    <version>${pluto.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.portals.pluto</groupId>
                    <artifactId>pluto-container-driver-api</artifactId>
                    <version>${pluto.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.portals.pluto</groupId>
                    <artifactId>pluto-taglib</artifactId>
                    <version>${pluto.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jsp-api</artifactId>
                    <version>${tomcat.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-servlet-api</artifactId>
                    <version>${tomcat.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.mvc</groupId>
                    <artifactId>javax.mvc-api</artifactId>
                    <version>1.0-pfd</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>javax.ws.rs-api</artifactId>
                    <version>2.1.1</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>eu.infomas</groupId>
                    <artifactId>annotation-detector</artifactId>
                    <version>3.0.5</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.annotation</groupId>
                    <artifactId>javax.annotation-api</artifactId>
                    <version>1.3.2</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.ccpp</groupId>
                    <artifactId>ccpp</artifactId>
                    <version>1.0</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld.servlet</groupId>
                    <artifactId>weld-servlet</artifactId>
                    <version>2.3.1.Final</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                    <version>1.7.5</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-jdk14</artifactId>
                    <version>1.7.5</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>simple-war</artifactId>
                    <version>${cargo.version}</version>
                    <type>war</type>
                    <scope>provided</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${cargo.version}</version>
                        <configuration>
                            <container>
                                <containerId>tomcat8x</containerId>
                                <artifactInstaller>
                                    <groupId>org.apache.tomcat</groupId>
                                    <artifactId>tomcat</artifactId>
                                    <version>${tomcat.version}</version>
                                </artifactInstaller>

                                <!-- add below to Tomcat's shared libraries -->
                                <dependencies>
                                    <dependency>
                                        <groupId>org.apache.portals.pluto
                                        </groupId>
                                        <artifactId>pluto-container</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.apache.portals.pluto
                                        </groupId>
                                        <artifactId>pluto-container-api
                                        </artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.apache.portals.pluto
                                        </groupId>
                                        <artifactId>pluto-container-driver-api
                                        </artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.apache.portals.pluto
                                        </groupId>
                                        <artifactId>pluto-taglib</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.portlet</groupId>
                                        <artifactId>portlet-api</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.servlet</groupId>
                                        <artifactId>servlet-api</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.slf4j</groupId>
                                        <artifactId>slf4j-api</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.slf4j</groupId>
                                        <artifactId>slf4j-jdk14</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>eu.infomas</groupId>
                                        <artifactId>annotation-detector
                                        </artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.annotation</groupId>
                                        <artifactId>javax.annotation-api
                                        </artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>org.jboss.weld.servlet
                                        </groupId>
                                        <artifactId>weld-servlet</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.mvc</groupId>
                                        <artifactId>javax.mvc-api</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.ws.rs</groupId>
                                        <artifactId>javax.ws.rs-api</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                    <dependency>
                                        <groupId>javax.ccpp</groupId>
                                        <artifactId>ccpp</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                </dependencies>
                            </container>

                            <configuration>
                                <type>standalone</type>
                                <home>
                                    ${project.build.directory}/apache-tomcat-${tomcat.version}
                                </home>
                                <properties>
                                    <cargo.servlet.port>8080
                                    </cargo.servlet.port>
                                    <cargo.logging>medium</cargo.logging>
                                    <cargo.servlet.users>
                                        tomcat:tomcat:tomcat,pluto,manager-gui
                                        | pluto:pluto:pluto,manager-gui,tckuser
                                    </cargo.servlet.users>
                                    <cargo.start.jvmargs>
                                        -Xdebug
                                        -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                                        -Xnoagent
                                        -Djava.compiler=NONE
                                    </cargo.start.jvmargs>
                                    <cargo.tomcat.valve.rewrite>
                                        className=org.apache.catalina.valves.rewrite.RewriteValve
                                    </cargo.tomcat.valve.rewrite>
                                </properties>
                                <configfiles>
                                    <configfile>
                                        <file>
                                            ${project.basedir}/rewrite.config
                                        </file>
                                        <todir>conf/Catalina/localhost</todir>
                                    </configfile>
                                </configfiles>
                            </configuration>

                            <deployables>
                                <!-- Deploy the portlet servlet under context /testsuite,
                                 as Pluto portal by default includes testsuite.TestPortlet1 -->
                                <deployable>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}
                                    </artifactId>
                                    <type>war</type>
                                    <properties>
                                        <context>/testsuite</context>
                                    </properties>
                                </deployable>

                                <!-- Deploy Pluto portal under /pluto -->
                                <deployable>
                                    <groupId>org.apache.portals.pluto</groupId>
                                    <artifactId>pluto-portal</artifactId>
                                    <type>war</type>
                                    <properties>
                                        <context>/pluto</context>
                                    </properties>
                                </deployable>

                                <deployable>
                                    <groupId>org.codehaus.cargo</groupId>
                                    <artifactId>simple-war</artifactId>
                                    <type>war</type>
                                    <properties>
                                        <context>/</context>
                                    </properties>
                                </deployable>

                            </deployables>
                        </configuration>
                    </plugin>

                </plugins>

            </build>
        </profile>

        <profile>
            <id>integration-tests</id>

            <properties>
                <drivers.dir>${project.basedir}/drivers</drivers.dir>
                <drivers.downloader.phase>
                    pre-integration-test
                </drivers.downloader.phase>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-portal</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-portal</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.lazerycode.selenium</groupId>
                        <artifactId>driver-binary-downloader-maven-plugin
                        </artifactId>
                        <version>1.0.17</version>
                        <configuration>
                            <onlyGetDriversForHostOperatingSystem>
                                true
                            </onlyGetDriversForHostOperatingSystem>
                            <rootStandaloneServerDirectory>
                                ${drivers.dir}/driver
                            </rootStandaloneServerDirectory>
                            <downloadedZipFileDirectory>
                                ${drivers.dir}/driver_zips
                            </downloadedZipFileDirectory>
                            <customRepositoryMap>
                                ${project.basedir}/drivers.xml
                            </customRepositoryMap>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>${drivers.downloader.phase}</phase>
                                <goals>
                                    <goal>selenium</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <webdriver.chrome.driver>
                                    ${webdriver.chrome.driver}
                                </webdriver.chrome.driver>
                                <trimStackTrace>false</trimStackTrace>
                                <enableAssertions>true</enableAssertions>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
